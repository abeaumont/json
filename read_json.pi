% A JSON to Picat converter based mbionchi's JSON module at at: https://github.com/mbionchi/json-picat
% by Neng-Fa Zhou, 2020

json_read_dict_from_file(File,T) =>
    S = read_file_chars(File),
    json_to_picat(S,T,_).

json_read_dict(Stream,T) =>
    Ch = read_char(Stream),
    read_chars(Stream,Ch,S),
    json_to_picat(S,T,_).

private
read_chars(_Stream,-1,S) => S = [].
read_chars(Stream,Ch,S) =>
    S = [Ch|SR],
    NextCh = read_char(Stream),
    read_chars(Stream,NextCh,SR).

private
json_to_picat(['"'|Str],Term,StrR) =>
    json_string_to_picat(Str,Term,StrR).
json_to_picat(['-'|Str],Term,StrR) =>
    json_number_to_picat(Str,Term,'-',StrR).
json_to_picat(Str@[N|_],Term,StrR),digit(N) =>
    json_number_to_picat(Str,Term,'+',StrR).
json_to_picat(['{'|Str],Term,StrR) =>
    json_object_to_picat(Str,Term,StrR).
json_to_picat(['['|Str],Term,StrR) =>
    json_array_to_picat(Str,Term,StrR).
json_to_picat([t,r,u,e|Str],Term,StrR) =>
    Term = true,StrR = Str.
json_to_picat([f,a,l,s,e|Str],Term,StrR) =>
    Term = false,StrR = Str.
json_to_picat([n,u,l,l|Str],Term,StrR) =>
    Term = null,StrR = Str.
json_to_picat([C|Str],Term,StrR),whitespace(C) =>
    json_to_picat(Str,Term,StrR).
json_to_picat(Str,_Term,_StrR) =>
    throw($json_syntax_error(1,Str)).

private
json_string_to_picat(['"'|Str],Term,StrR) =>
    Term = [],StrR = Str.
json_string_to_picat(['\\','"'|Str],Term,StrR) =>
    Term = ['"'|TermR],
    json_string_to_picat(Str,TermR,StrR).
json_string_to_picat(['\\','\\'|Str],Term,StrR) =>
    Term = ['\\'|TermR],
    json_string_to_picat(Str,TermR,StrR).
json_string_to_picat(['\\','/'|Str],Term,StrR) =>
    Term = ['/'|TermR],
    json_string_to_picat(Str,TermR,StrR).
json_string_to_picat(['\\','b'|Str],Term,StrR) =>
    Term = ['\b'|TermR],
    json_string_to_picat(Str,TermR,StrR).
json_string_to_picat(['\\','f'|Str],Term,StrR) =>
    Term = ['\f'|TermR],
    json_string_to_picat(Str,TermR,StrR).
json_string_to_picat(['\\','n'|Str],Term,StrR) =>
    Term = ['\n'|TermR],
    json_string_to_picat(Str,TermR,StrR).
json_string_to_picat(['\\','r'|Str],Term,StrR) =>
    Term = ['\r'|TermR],
    json_string_to_picat(Str,TermR,StrR).
json_string_to_picat(['\\','t'|Str],Term,StrR) =>
    Term = ['\t'|TermR],
    json_string_to_picat(Str,TermR,StrR).
json_string_to_picat(['\\','u',A,B,C,D|Str],Term,StrR) =>
    Term = ['\\','u',A,B,C,D|TermR],
    json_string_to_picat(Str,TermR,StrR).
json_string_to_picat(Str@['\\'|_],_,_) =>
    throw($json_syntax_error(2,Str)).
json_string_to_picat([C|Str],Term,StrR) =>
    Term = [C|TermR],
    json_string_to_picat(Str,TermR,StrR).

private
json_number_to_picat(Str,Term,Sign,StrR) =>
    jason_extract_number_chars(Str,NumChs,StrR),
    Val = to_number(NumChs),
    (Sign == '+' -> Term = Val; Term = -Val).

% the correctness of syntax is not checked!
%
jason_extract_number_chars(['e'|Str],NumChs,StrR) =>
    NumChs = [e|NumChsR],
    jason_extract_number_chars(Str,NumChsR,StrR).
jason_extract_number_chars(['E'|Str],NumChs,StrR) =>
    NumChs = ['E'|NumChsR],
    jason_extract_number_chars(Str,NumChsR,StrR).
jason_extract_number_chars(['.'|Str],NumChs,StrR) =>
    NumChs = ['.'|NumChsR],
    jason_extract_number_chars(Str,NumChsR,StrR).
jason_extract_number_chars([C|Str],NumChs,StrR),digit(C) =>
    NumChs = [C|NumChsR],
    jason_extract_number_chars(Str,NumChsR,StrR).
jason_extract_number_chars(Str,NumChs,StrR) =>
    NumChs = [],Str = StrR.

private
json_array_to_picat(Str,Term,StrR),
    json_array_element_to_picat(Str,Term,Str1)
=>
    StrR = Str1.
json_array_to_picat(Str,_Term,_StrR) =>
    throw($json_syntax_error(3,Str)).

private
json_array_element_to_picat([']'|Str],Term,StrR) =>
    Term = [],StrR = Str.
json_array_element_to_picat([C|Str],Term,StrR),whitespace(C) =>
    json_array_element_to_picat(Str,Term,StrR).
json_array_element_to_picat(Str,Term,StrR) =>
    json_to_picat(Str,Term1,Str1),
    Term = [Term1|TermR],
    json_array_to_picat_help(Str1,TermR,StrR).
    
private
json_array_to_picat_help([']'|Str],Term,StrR) =>
    Term = [],StrR = Str.
json_array_to_picat_help([','|Str],Term,StrR) =>
    json_array_element_to_picat(Str,Term,StrR).
json_array_to_picat_help([C|Str],Term,StrR),whitespace(C) =>
    json_array_to_picat_help(Str,Term,StrR).

private
json_object_to_picat(Str,Term,StrR) =>
    json_object_kv_pair_to_picat(Str,Pairs,StrR),
    Term = new_map(Pairs).

private
json_object_kv_pair_to_picat(['}'|Str],Pairs,StrR) =>
    Pairs = [],StrR = Str.
json_object_kv_pair_to_picat([C|Str],Pairs,StrR),whitespace(C) =>
    json_object_kv_pair_to_picat(Str,Pairs,StrR).
json_object_kv_pair_to_picat(['"'|Str],Pairs,StrR) =>
    json_string_to_picat(Str,Key,Str1),
    json_object_val_to_picat(Str1,Val,StrR2),
    Pairs = [(Key=Val)|PairsR],
    json_object_to_picat_help(StrR2,PairsR,StrR).

private
json_object_to_picat_help(['}'|Str],Pairs,StrR) =>
    Pairs = [],StrR = Str.
json_object_to_picat_help([','|Str],Pairs,StrR) =>
    json_object_kv_pair_to_picat(Str,Pairs,StrR).
json_object_to_picat_help([C|Str],Pairs,StrR),whitespace(C) =>
    json_object_to_picat_help(Str,Pairs,StrR).
json_object_to_picat_help(Str,_Pairs,_StrR) =>
    throw($json_syntax_error(4,Str)).
    
private
json_object_val_to_picat([C|Str],Val,StrR),whitespace(C) =>
    json_object_val_to_picat(Str,Val,StrR).
json_object_val_to_picat([':'|Str],Val,StrR) =>
    json_to_picat(Str,Val,StrR).
json_object_val_to_picat(Str,_Val,_StrR) =>
    throw($json_syntax_error(5,Str)).    

private
whitespace(' ') => true.
whitespace('\t') => true.
whitespace('\n') => true.
whitespace('\r') => true.

